//Note that calculated columns do not allow variant data types.  To return text in one case, the other must return text.  This amounts to formatting numbers and dates as strings to also show "current" or "latest" based on condition.

//001
//Relative date filter for current year.
//!DAX
//!CalcColumn
YearFilter = IF(YEAR(dimFinishDate[date]) = YEAR(TODAY()),"Current",CONVERT(YEAR(dimFinishDate[Date]),STRING))

//002
//Latest Date (price, entry, etc) filter
//!DAX
//!CalcColumn
//It is best to first have a dimension date table for the date
//it is recommended to have a card visual next to the slicer that uses this calculated column to display what "latest" is
Date for filter = 
VAR _MaxDate = MAX (MPRVolEffDates[EffectiveStartDate])
RETURN
    IF(
        MPRVolEffDates[EffectiveStartDate] = _MaxDate,
        "Latest",
        FORMAT(MPRVolEffDates[EffectiveStartDate],"mm/dd/yyyy")
    )

//003
//LAST-REFRESH shown on the dashboard
//!M-Code
//!Transform Data
//    New Source
//        Blank Query
= DateTime.LocalNow()
//"Transform" contextual menu >>> "To Table"
//Applied Step - Rename Column:  "Last Refresh"
//Applied Step - Change Type:  datetime

//004
//Relative Months - Mcode + DAX
//!M-Code w/ DAX
//!M-Code table with DAX columns
//Use M-Code to make the initial relative months table; Use DAX to add some columns
//See 005 for all DAX, date table
//M-Code
let
    Source = Sql.Database("ref-mc1-shared-prd-1-sqmi.ce994f3dcc4b.database.windows.net", "Refining_OLAP", [Query="WITH RelativeDateCTE AS (#(lf)   SELECT YEAR(DATEADD(MONTH, -1, GETDATE())) AS Year, MONTH(DATEADD(MONTH, -1, GETDATE())) AS Month,-2 AS RelativeMonth#(lf)   UNION ALL#(lf)   SELECT YEAR(GETDATE()), MONTH(GETDATE()), -1#(lf)--use (-1) because 0 return all of the blank months in the relationship when used in viz#(lf)    UNION ALL#(lf)    SELECT YEAR(DATEADD(MONTH, 1, GETDATE())), MONTH(DATEADD(MONTH, 1, GETDATE())), 1#(lf)    UNION ALL#(lf)    SELECT YEAR(DATEADD(MONTH, 2, GETDATE())), MONTH(DATEADD(MONTH, 2, GETDATE())), 2#(lf)#(tab)UNION ALL#(lf)    SELECT YEAR(DATEADD(MONTH, 3, GETDATE())), MONTH(DATEADD(MONTH, 3, GETDATE())), 3#(lf))#(lf)SELECT * FROM RelativeDateCTE;"]),
    #"Changed Type" = Table.TransformColumnTypes(Source,{{"Year", type text}, {"Month", type text}, {"RelativeMonth", type text}}),
    #"Added Custom" = Table.AddColumn(#"Changed Type", "DateYrMonth", each [Year]&[Month]),
    #"Changed Type1" = Table.TransformColumnTypes(#"Added Custom",{{"Year", Int64.Type}, {"Month", Int64.Type}, {"RelativeMonth", Int64.Type}})
in
    #"Changed Type1"
//DAX Calculated Columns
MonthDAX = FORMAT(DATE(dimRelative_Months[Year],dimRelative_Months[Month],1), "mm")
DateYrMonthDAX = dimRelative_Months[Year]&dimRelative_Months[MonthDAX]
RelativeMonthDAX = 
    VAR ReferenceYear=year(TODAY())
    VAR ReferenceMonth=MONTH(TODAY())
    VAR CurrentYear= [Year]
    VAR CurrentMonth= [Month]
    VAR res=((CurrentYear-ReferenceYear)*12)+(CurrentMonth-ReferenceMonth)+1
    return res
MonthDisplay = FORMAT(DATE(dimRelative_Months[Year],dimRelative_Months[Month],1), "mmm-yy")
//Relate to primary date table on date column [DateYrMth]
//Use RelativeMonthDAX as the slicer 
//Use RelativeMonth as a column header (had an issue when using 0 as the column header (or maybe the relationship on [relativemonth] before?), which is the RelativeMonthDAX relative month . . this can probably be improved but it works)
//CAUTION M Code is tied to the Semantic M code side of "today" and the DAX columns are tied to the DAX's version of "today".  Possible risk of getting the two relative months out of sync, could have impacts

//005
//Relative Months Date Table - DAX
//!DAX
//!DAX table with DAX columns
//Make the table (copy of existing date table maybe?), then add the columns.  This is a full table of dates that includes the relative month column.  Could probably also just add the relativemonth column (and its supporting columns) to the primary date table
_Date Tables = CALENDAR(EOMONTH(today(),-2)+1, EOMONTH(today(),3))
MMM YYYY = FORMAT('_Date Tables'[Date],"MMM-YY")
YYYYMM = FORMAT('_Date Tables'[Date],"YYYYMM")
Year = year('_Date Tables'[Date])
Month = MONTH('_Date Tables'[Date])
RelativeMonth = 
    VAR ReferenceYear=year(TODAY())
    VAR ReferenceMonth=MONTH(TODAY())
    VAR CurrentYear= YEAR([Date])
    VAR CurrentMonth=MONTH([Date])
    VAR res=((CurrentYear-ReferenceYear)*12)+(CurrentMonth-ReferenceMonth)+1
    return res
//Relate to primary Date table on [Date]
//Use RelativeMonth as the slicer.  Unsure if the 0 will create a problem as a column header, I am pretty sure that my issue was trying to relate on [RelativeMonth] where one side of the relationship was a 0 so it was picking up blanks
